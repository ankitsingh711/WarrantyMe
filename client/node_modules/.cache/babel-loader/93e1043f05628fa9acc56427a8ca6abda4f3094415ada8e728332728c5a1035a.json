{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/WarrantyMe/client/src/pages/Login.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Container, Paper, Typography, Button, Box } from '@mui/material';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    login\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 8\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 4,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Welcome to LetterDrive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mb: 4\n        },\n        children: \"Sign in with your Google account to start creating letters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          startIcon: /*#__PURE__*/_jsxDEV(GoogleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 24\n          }, this),\n          onClick: login,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"UHkfWqKqWotCJBriqTc0XaXAMSw=\", false, function () {\n  return [useAuth];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Container","Paper","Typography","Button","Box","GoogleIcon","useAuth","jsxDEV","_jsxDEV","Login","_s","login","maxWidth","sx","mt","children","p","textAlign","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","display","justifyContent","size","startIcon","onClick","_c","$RefreshReg$"],"sources":["/Users/ankit/WarrantyMe/client/src/pages/Login.tsx"],"sourcesContent":["import React from 'react';\nimport { \n  Container, \n  Paper, \n  Typography, \n  Button, \n  Box \n} from '@mui/material';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Login: React.FC = () => {\n  const { login } = useAuth();\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\n      <Paper sx={{ p: 4, textAlign: 'center' }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Welcome to LetterDrive\n        </Typography>\n        \n        <Typography variant=\"body1\" sx={{ mb: 4 }}>\n          Sign in with your Google account to start creating letters\n        </Typography>\n\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            startIcon={<GoogleIcon />}\n            onClick={login}\n          >\n            Sign in with Google\n          </Button>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Login; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,KAAK,EACLC,UAAU,EACVC,MAAM,EACNC,GAAG,QACE,eAAe;AACtB,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGL,OAAO,CAAC,CAAC;EAE3B,oBACEE,OAAA,CAACR,SAAS;IAACY,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,eACrCP,OAAA,CAACP,KAAK;MAACY,EAAE,EAAE;QAAEG,CAAC,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,gBACvCP,OAAA,CAACN,UAAU;QAACgB,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAJ,QAAA,EAAC;MAEtC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEbf,OAAA,CAACN,UAAU;QAACgB,OAAO,EAAC,OAAO;QAACL,EAAE,EAAE;UAAEW,EAAE,EAAE;QAAE,CAAE;QAAAT,QAAA,EAAC;MAE3C;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEbf,OAAA,CAACJ,GAAG;QAACS,EAAE,EAAE;UAAEY,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE;QAAS,CAAE;QAAAX,QAAA,eACrDP,OAAA,CAACL,MAAM;UACLe,OAAO,EAAC,WAAW;UACnBS,IAAI,EAAC,OAAO;UACZC,SAAS,eAAEpB,OAAA,CAACH,UAAU;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC1BM,OAAO,EAAElB,KAAM;UAAAI,QAAA,EAChB;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB,CAAC;AAACb,EAAA,CA3BID,KAAe;EAAA,QACDH,OAAO;AAAA;AAAAwB,EAAA,GADrBrB,KAAe;AA6BrB,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}